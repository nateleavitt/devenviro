#! /bin/bash
usage() { echo "Usage: $0 [-b <boolean>] [-m <boolean>]" 1>&2; exit 1; }

brew=true;
mvim=true;

while getopts ":r:b:m:" o; do
  case "${o}" in
    b)
      brew=${OPTARG}
      ;;
    m)
      mvim=${OPTARG}
      ;;
    *)
      usage
      ;;
  esac
done
shift $((OPTIND-1))

if [ -z "${brew}" ] || [ -z "${mvim}" ]; then
  usage
fi

function die() {
    echo "${@}"
    exit 1
}

function install_ruby() {
  echo "installing ruby"
  brew install rbenv ruby-build
}

function install_homebrew() {
  echo "installing homebrew"
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" \
    || die "Had problems installing Homebrew"
}

function install_fish() {
  echo "installing and configuring fish"
  brew install fish
  echo "/usr/local/bin/fish" | sudo tee -a /etc/shells
  chsh -s /usr/local/bin/fish

  # Adding bash environment files
  echo "creating bash environment files"
  ln -s $HOME/.dotfiles/config $HOME/.config
}

function install_mvim() {
  echo "installing mvim"
  brew install macvim --with-lua
  brew linkapps macvim
}

function install_node() {
  echo "installing node"
  brew install node
}

function install_atom() {
  echo "installing atom"
  brew cask install atom
}

function install_docker() {
  echo "installing docker"
  brew cask install docker
}

function install_other() {
  echo "installing typora"
  brew cask install typora
  echo "installing chrome"
  brew cask install google-chrome
  echo "installing 1password"
  brew cask install 1password
  echo "installing slack"
  brew cask install slack
  echo "installing google music player"
  brew cask install google-play-music-desktop-player
  echo "installing ack"
  brew install ack
  echo "installing wget"
  brew install wget
}

# setup dev env
echo 'Creating code directories'
mkdir $HOME/Code
mkdir $HOME/Code/github.com
mkdir $HOME/Code/github.com/nateleavitt
mkdir $HOME/Code/dev

# move dotfiles
echo 'moving dotfiles to hidden'
mv $HOME/dotfiles ~/.dotfiles

# Add <strong>.old</strong> to any existing Vim file in the home directory
echo 'renaming old dirs to *.old if exist'
for i in $HOME/.vim \
  $HOME/.vimrc \
  $HOME/.gvimrc \
  $HOME/.gvimrc.before \
  $HOME/.gvimrc.after \
  $HOME/.vimrc.before \
  $HOME/.vimrc.after \
  $HOME/bin \
  $HOME/.gitignore_global \
  $HOME/.atom; do
  if [[ ( -e $i ) || ( -h $i ) ]]; then
    echo "${i} has been renamed to ${i}.old"
    mv "${i}" "${i}.old" || die "Could not move ${i} to ${i}.old"
  fi
done

install_ruby
if $brew ; then install_homebrew ; fi
install_fish
if $mvim ; then install_mvim ; fi
install_node
install_atom
install_docker
install_other

# Remove and replace .vimrc.before after files
echo "linking default gvimrc and vimrc files if installed"
ln -s $HOME/.dotfiles/vim $HOME/.vim
ln -s $HOME/.dotfiles/vim/vimrc $HOME/.vimrc
ln -s $HOME/.dotfiles/vim/gvimrc $HOME/.gvimrc
ln -s $HOME/.dotfiles/vim/gvimrc.before $HOME/.gvimrc.before
ln -s $HOME/.dotfiles/vim/gvimrc.after $HOME/.gvimrc.after
ln -s $HOME/.dotfiles/vim/vimrc.before $HOME/.vimrc.before
ln -s $HOME/.dotfiles/vim/vimrc.after $HOME/.vimrc.after
ln -s $HOME/.dotfiles/bin $HOME
ln -s $HOME/.dotfiles/git/gitignore_global $HOME/.gitignore_global
ln -s $HOME/.dotfiles/atom $HOME/.atom

echo "Configuring global git ignore"
git config --global core.excludesfile ~/.gitignore_global
# git config --global credential.helper osxkeychain

echo "downloading and configuring vim plugins"
git clone https://github.com/gmarik/Vundle.vim.git $HOME/.vim/bundle/Vundle.vim
vim +PluginInstall +qall

echo "Launching fish shell"
fish
echo "Finished!"
